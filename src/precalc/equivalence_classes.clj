(ns precalc.equivalence-classes)
; In all equivalnce classes, first number defines how many cases there are

(def dist
  ; Equivalence classes for (a > b > c > d > e)
  [[4  0 0 0 0 0] [24 0 0 1 2 2] [12 0 1 1 0 1] [24 0 1 2 1 0]
   [12 0 0 0 0 1] [24 0 0 1 2 3] [24 0 1 1 0 2] [24 0 1 2 1 1]
   [12 0 0 0 1 0] [12 0 1 0 0 0] [12 0 1 1 1 0] [24 0 1 2 1 2]
   [12 0 0 0 1 1] [12 0 1 0 0 1] [12 0 1 1 1 1] [24 0 1 2 1 3]
   [24 0 0 0 1 2] [24 0 1 0 0 2] [24 0 1 1 1 2] [24 0 1 2 2 0]
   [12 0 0 1 0 0] [12 0 1 0 1 0] [24 0 1 1 2 0] [24 0 1 2 2 1]
   [12 0 0 1 0 1] [12 0 1 0 1 1] [24 0 1 1 2 1] [24 0 1 2 2 2]
   [24 0 0 1 0 2] [24 0 1 0 1 2] [24 0 1 1 2 2] [24 0 1 2 2 3]
   [12 0 0 1 1 0] [24 0 1 0 2 0] [24 0 1 1 2 3] [24 0 1 2 3 0]
   [12 0 0 1 1 1] [24 0 1 0 2 1] [24 0 1 2 0 0] [24 0 1 2 3 1]
   [24 0 0 1 1 2] [24 0 1 0 2 2] [24 0 1 2 0 1] [24 0 1 2 3 2]
   [24 0 0 1 2 0] [24 0 1 0 2 3] [24 0 1 2 0 2] [24 0 1 2 3 3]
   [24 0 0 1 2 1] [12 0 1 1 0 0] [24 0 1 2 0 3]])

(def pair
  ; Equivalence classes for (a, a, b > c > d)
  [[12 0 1 0 0 0] [24 0 1 0 1 2] [24 0 1 2 0 0] [12 0 1 2 2 2]
   [12 0 1 0 0 1] [24 0 1 0 2 0] [24 0 1 2 0 1] [12 0 1 2 2 3]
   [24 0 1 0 0 2] [24 0 1 0 2 1] [24 0 1 2 0 2] [24 0 1 2 3 0]
   [12 0 1 0 1 0] [24 0 1 0 2 2] [24 0 1 2 0 3] [24 0 1 2 3 2]
   [12 0 1 0 1 1] [24 0 1 0 2 3] [24 0 1 2 2 0] [12 0 1 2 3 3]])

(def dpair
  ; Equivalence classes for (a, a > b, b, c)
  [[12 0 1 0 1 0] [24 0 1 0 2 0] [24 0 1 0 2 2] [12 0 1 2 3 0]  
   [12 0 1 0 1 2] [24 0 1 0 2 1] [24 0 1 0 2 3] [12 0 1 2 3 2]])

   (def trio
  ; Equivalence classes for (a, a, a, b > c)
  [[12 0 1 2 0 0] [12 0 1 2 0 3] [4  0 1 2 3 3]
   [24 0 1 2 0 1] [12 0 1 2 3 0]])

(def full
  ; Equivalence classes for (a, a, a, b, b)
  [[12 0 1 2 0 1] [12 0 1 2 0 3]])

(def four
  ; Equivalence classes for (a, a, a, a, b)
  [[4 0 1 2 3 0]])
